/* automatically generated by rust-bindgen 0.69.1 */

pub const WEBVIEW_VERSION_MAJOR: u32 = 0;
pub const WEBVIEW_VERSION_MINOR: u32 = 11;
pub const WEBVIEW_VERSION_PATCH: u32 = 0;
pub const WEBVIEW_VERSION_PRE_RELEASE: &[u8; 1] = b"\0";
pub const WEBVIEW_VERSION_BUILD_METADATA: &[u8; 1] = b"\0";
pub const WEBVIEW_HINT_NONE: u32 = 0;
pub const WEBVIEW_HINT_MIN: u32 = 1;
pub const WEBVIEW_HINT_MAX: u32 = 2;
pub const WEBVIEW_HINT_FIXED: u32 = 3;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct webview_version_t {
    pub major: ::std::os::raw::c_uint,
    pub minor: ::std::os::raw::c_uint,
    pub patch: ::std::os::raw::c_uint,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct webview_version_info_t {
    pub version: webview_version_t,
    pub version_number: [::std::os::raw::c_char; 32usize],
    pub pre_release: [::std::os::raw::c_char; 48usize],
    pub build_metadata: [::std::os::raw::c_char; 48usize],
}
pub type webview_t = *mut ::std::os::raw::c_void;
extern "C" {
    pub fn webview_create(
        debug: ::std::os::raw::c_int,
        window: *mut ::std::os::raw::c_void,
    ) -> webview_t;
}
extern "C" {
    pub fn webview_destroy(w: webview_t);
}
extern "C" {
    pub fn webview_run(w: webview_t);
}
extern "C" {
    pub fn webview_terminate(w: webview_t);
}
extern "C" {
    pub fn webview_dispatch(
        w: webview_t,
        fn_: ::std::option::Option<
            unsafe extern "C" fn(w: webview_t, arg: *mut ::std::os::raw::c_void),
        >,
        arg: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn webview_get_window(w: webview_t) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn webview_set_title(w: webview_t, title: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn webview_set_size(
        w: webview_t,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        hints: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn webview_navigate(w: webview_t, url: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn webview_set_html(w: webview_t, html: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn webview_init(w: webview_t, js: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn webview_eval(w: webview_t, js: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn webview_bind(
        w: webview_t,
        name: *const ::std::os::raw::c_char,
        fn_: ::std::option::Option<
            unsafe extern "C" fn(
                seq: *const ::std::os::raw::c_char,
                req: *const ::std::os::raw::c_char,
                arg: *mut ::std::os::raw::c_void,
            ),
        >,
        arg: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn webview_unbind(w: webview_t, name: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn webview_return(
        w: webview_t,
        seq: *const ::std::os::raw::c_char,
        status: ::std::os::raw::c_int,
        result: *const ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn webview_version() -> *const webview_version_info_t;
}
